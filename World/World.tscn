[gd_scene load_steps=14 format=3 uid="uid://bqdf7gfmu851f"]

[ext_resource type="PackedScene" uid="uid://bdm56ujj65teb" path="res://Player/Player.tscn" id="1_an2so"]
[ext_resource type="Script" path="res://addons/sdf_rdt/sdf_container.gd" id="2_vw6ij"]
[ext_resource type="Shader" path="res://World/sky_shader.gdshader" id="7_liiw3"]
[ext_resource type="Script" path="res://addons/sdf_rdt/sdf_generic.gd" id="7_vvng6"]
[ext_resource type="PackedScene" uid="uid://bsi6feik85wmn" path="res://Hierarch/hierarch.tscn" id="8_eob7v"]
[ext_resource type="PackedScene" uid="uid://c6b8prnjgm61h" path="res://GUI/hud.tscn" id="9_7c4ph"]

[sub_resource type="Shader" id="Shader_je37t"]
code = "shader_type spatial;
//render_mode unshaded;// depth_draw_never; depth_draw_opaque;
render_mode depth_draw_opaque;



uniform mat4 u_shape1000_transform;
uniform vec4 u_shape1000_color;
uniform float u_shape1000_smoothness;
uniform float u_shape1000_layer;
uniform float u_shape1000_size_primary;
uniform float u_shape1000_size_secondary;
uniform int u_shape1000_generic_shape;
uniform float u_shape1000_rounding;
uniform vec3 u_shape1000_offset;
uniform float u_shape1000_onion_alpha;
uniform float u_shape1000_onion_thickness;
uniform mat4 u_shape1001_transform;
uniform vec4 u_shape1001_color;
uniform float u_shape1001_smoothness;
uniform float u_shape1001_layer;
uniform float u_shape1001_size_primary;
uniform float u_shape1001_size_secondary;
uniform int u_shape1001_generic_shape;
uniform float u_shape1001_rounding;
uniform vec3 u_shape1001_offset;
uniform float u_shape1001_onion_alpha;
uniform float u_shape1001_onion_thickness;
uniform mat4 u_shape1002_transform;
uniform vec4 u_shape1002_color;
uniform float u_shape1002_smoothness;
uniform float u_shape1002_layer;
uniform float u_shape1002_size_primary;
uniform float u_shape1002_size_secondary;
uniform int u_shape1002_generic_shape;
uniform float u_shape1002_rounding;
uniform vec3 u_shape1002_offset;
uniform float u_shape1002_onion_alpha;
uniform float u_shape1002_onion_thickness;
uniform mat4 u_shape0_transform;
uniform vec4 u_shape0_color;
uniform float u_shape0_smoothness;
uniform float u_shape0_layer;
uniform float u_shape0_size_primary;
uniform float u_shape0_size_secondary;
uniform int u_shape0_generic_shape;
uniform float u_shape0_rounding;
uniform vec3 u_shape0_offset;
uniform float u_shape0_onion_alpha;
uniform float u_shape0_onion_thickness;
uniform mat4 u_shape1_transform;
uniform vec4 u_shape1_color;
uniform float u_shape1_smoothness;
uniform float u_shape1_layer;
uniform float u_shape1_size_primary;
uniform float u_shape1_size_secondary;
uniform int u_shape1_generic_shape;
uniform float u_shape1_rounding;
uniform vec3 u_shape1_offset;
uniform float u_shape1_onion_alpha;
uniform float u_shape1_onion_thickness;
uniform mat4 u_shape2_transform;
uniform vec4 u_shape2_color;
uniform float u_shape2_smoothness;
uniform float u_shape2_layer;
uniform float u_shape2_size_primary;
uniform float u_shape2_size_secondary;
uniform int u_shape2_generic_shape;
uniform float u_shape2_rounding;
uniform vec3 u_shape2_offset;
uniform float u_shape2_onion_alpha;
uniform float u_shape2_onion_thickness;
uniform mat4 u_shape3_transform;
uniform vec4 u_shape3_color;
uniform float u_shape3_smoothness;
uniform float u_shape3_layer;
uniform float u_shape3_size_primary;
uniform float u_shape3_size_secondary;
uniform int u_shape3_generic_shape;
uniform float u_shape3_rounding;
uniform vec3 u_shape3_offset;
uniform float u_shape3_onion_alpha;
uniform float u_shape3_onion_thickness;
uniform mat4 u_shape4_transform;
uniform vec4 u_shape4_color;
uniform float u_shape4_smoothness;
uniform float u_shape4_layer;
uniform float u_shape4_size_primary;
uniform float u_shape4_size_secondary;
uniform int u_shape4_generic_shape;
uniform float u_shape4_rounding;
uniform vec3 u_shape4_offset;
uniform float u_shape4_onion_alpha;
uniform float u_shape4_onion_thickness;
uniform mat4 u_shape5_transform;
uniform vec4 u_shape5_color;
uniform float u_shape5_smoothness;
uniform float u_shape5_layer;
uniform float u_shape5_size_primary;
uniform float u_shape5_size_secondary;
uniform int u_shape5_generic_shape;
uniform float u_shape5_rounding;
uniform vec3 u_shape5_offset;
uniform float u_shape5_onion_alpha;
uniform float u_shape5_onion_thickness;

uniform vec3 fog_color : source_color = vec3(.005);
uniform float shrink = 1.0;

const int MAX_STEPS = 64;
const float MAX_DISTANCE = 100.0;
const float SURFACE_DISTANCE = 0.005;
const float NORMAL_PRECISION = 0.0005;

const int SPHERE  = 0;
const int ROUNDED_BOX = 1;
const int TORUS = 2;
const int CYLINDER = 3;
const int ROUNDED_CONE = 4;
const int PLANE = 5;


void vertex() {
	POSITION = vec4(VERTEX, 1.0);
}

float dot2( in vec3 v ) {
	 return dot(v,v); 
}

float rand3d(vec3 p)
{
	return fract(sin(dot(p ,vec3(12.9898,78.233,128.852))) * 43758.5453)*2.0-1.0;
}

float noise3D(vec3 p)
{
	
	float f3 = 1.0/3.0;
	float s = (p.x+p.y+p.z)*f3;
	int i = int(floor(p.x+s));
	int j = int(floor(p.y+s));
	int k = int(floor(p.z+s));
	
	float g3 = 1.0/6.0;
	float t = float((i+j+k))*g3;
	float x0 = float(i)-t;
	float y0 = float(j)-t;
	float z0 = float(k)-t;
	x0 = p.x-x0;
	y0 = p.y-y0;
	z0 = p.z-z0;
	
	int i1,j1,k1;
	int i2,j2,k2;
	
	if(x0>=y0)
	{
		if(y0>=z0){ i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; } // X Y Z order
		else if(x0>=z0){ i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; } // X Z Y order
		else { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }  // Z X Z order
	}
	else 
	{ 
		if(y0<z0) { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; } // Z Y X order
		else if(x0<z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; } // Y Z X order
		else { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; } // Y X Z order
	}
	
	float x1 = x0 - float(i1) + g3; 
	float y1 = y0 - float(j1) + g3;
	float z1 = z0 - float(k1) + g3;
	float x2 = x0 - float(i2) + 2.0*g3; 
	float y2 = y0 - float(j2) + 2.0*g3;
	float z2 = z0 - float(k2) + 2.0*g3;
	float x3 = x0 - 1.0 + 3.0*g3; 
	float y3 = y0 - 1.0 + 3.0*g3;
	float z3 = z0 - 1.0 + 3.0*g3;	
				 
	// Godot choking on `vec3(int,int,int)` 
	vec3 ijk0 = vec3(float(i),float(j),float(k));
	vec3 ijk1 = vec3(float(i+i1),float(j+j1),float(k+k1));
	vec3 ijk2 = vec3(float(i+i2),float(j+j2),float(k+k2));
	vec3 ijk3 = vec3(float(i+1),float(j+1),float(k+1));
            
	vec3 gr0 = normalize(vec3(rand3d(ijk0),rand3d(ijk0*2.01),rand3d(ijk0*2.02)));
	vec3 gr1 = normalize(vec3(rand3d(ijk1),rand3d(ijk1*2.01),rand3d(ijk1*2.02)));
	vec3 gr2 = normalize(vec3(rand3d(ijk2),rand3d(ijk2*2.01),rand3d(ijk2*2.02)));
	vec3 gr3 = normalize(vec3(rand3d(ijk3),rand3d(ijk3*2.01),rand3d(ijk3*2.02)));
	
	float n0 = 0.0;
	float n1 = 0.0;
	float n2 = 0.0;
	float n3 = 0.0;

	float t0 = 0.5 - x0*x0 - y0*y0 - z0*z0;
	if(t0>=0.0)
	{
		t0*=t0;
		n0 = t0 * t0 * dot(gr0, vec3(x0, y0, z0));
	}
	float t1 = 0.5 - x1*x1 - y1*y1 - z1*z1;
	if(t1>=0.0)
	{
		t1*=t1;
		n1 = t1 * t1 * dot(gr1, vec3(x1, y1, z1));
	}
	float t2 = 0.5 - x2*x2 - y2*y2 - z2*z2;
	if(t2>=0.0)
	{
		t2 *= t2;
		n2 = t2 * t2 * dot(gr2, vec3(x2, y2, z2));
	}
	float t3 = 0.5 - x3*x3 - y3*y3 - z3*z3;
	if(t3>=0.0)
	{
		t3 *= t3;
		n3 = t3 * t3 * dot(gr3, vec3(x3, y3, z3));
	}
	return 96.0*(n0+n1+n2+n3);
	
}

// TODO: employ tf uniforms to rotate noise with object
float surface_noise(in vec3 p){
	float f;
	//f = 0.5*noise3D( f ); p = p*2.05;
    //f += 0.25*simplex3D( f ); p = p*2.1;
	//f = noise3D(0.5*p/shrink)*.03*shrink; p = p*15.3;
	f = smoothstep(0.,.3,noise3D(TIME*.09+0.2*p/shrink))*.13*shrink;
	p = p*2.3;
	f += noise3D(TIME*.14+p/shrink)*.04*shrink;
	return f;
}


float get_sphere(vec3 p, vec3 center, float radius) {
	return length(p - center) - radius;
}

float get_box(vec3 p, vec3 b) {
	vec3 q = abs(p) - b;
	return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);
}

float get_rounded_box(vec3 p, vec3 b, float r) {
	vec3 q = abs(p) - b;
	return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - r;
}

float get_torus(vec3 p, vec2 r) {
	vec2 q = vec2(length(p.xz) - r.x, p.y);
	return length(q) - r.y;
}

float get_rounded_cylinder(vec3 p, float radius, float rounding, float h) {
	vec2 d = vec2(length(p.xz) - radius + rounding, abs(p.y) - h);
	return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - rounding;
}

float get_round_cone(vec3 p, vec3 a, vec3 b, float r1, float r2)
{
  // sampling independent computations (only depend on shape)
  vec3  ba = b - a;
  float l2 = dot(ba,ba);
  float rr = r1 - r2;
  float a2 = l2 - rr*rr;
  float il2 = 1.0/l2;
    
  // sampling dependant computations
  vec3 pa = p - a;
  float y = dot(pa,ba);
  float z = y - l2;
  float x2 = dot2( pa*l2 - ba*y );
  float y2 = y*y*l2;
  float z2 = z*z*l2;

  // single square root!
  float k = sign(rr)*rr*rr*x2;
  if( sign(z)*a2*z2>k ) return  sqrt(x2 + z2)        *il2 - r2;
  if( sign(y)*a2*y2<k ) return  sqrt(x2 + y2)        *il2 - r1;
                        return (sqrt(x2*a2*il2)+y*rr)*il2 - r1;
}

float sdPlane( vec3 p, vec3 n, float h )
{
  // n must be normalized
  return dot(p,n) + h;
}

float get_generic_shape(int shape_sel, vec3 p, vec3 offset, float rounding, float size1, float size2 ){
	float d = 0.;
	switch (shape_sel){
		case SPHERE:
		    d = get_sphere(p,offset,size1);
			break;
		case PLANE:
			d = sdPlane(p, vec3(0,0,-1), size1);
			break;
		case ROUNDED_CONE:
			d = get_round_cone(p, vec3(0.0), offset,size1,size2);
			break;
			//float get_round_cone(vec3 p, vec3 a, vec3 b, float r1, float r2)
		case ROUNDED_BOX:
			d = get_rounded_box(p,vec3(size1,size2,size1),rounding);
			break;
		case CYLINDER:
			d = get_rounded_cylinder(p, size1, rounding, size2);
			break;
		case TORUS:
			d = get_torus(p, vec2(size1,size2) );
			break;
		default:
		    d = get_sphere(p,offset,size2);
			break;
	}
	
	return d;
}

float sharp_union(float a, float b) {
	return min(a, b);
}

float smooth_union(float a, float b, float k) {
	float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);
	return mix(b, a, h) - k * h * (1.0 - h);
}

vec4 smooth_union_c(float da, float db, vec3 ca, vec3 cb, float k) {
	float h = clamp(0.5 + 0.5 * (db - da) / k, 0.0, 1.0);
	float d = mix(db, da, h) - k * h * (1.0 - h);
	vec3 col = mix(cb, ca, h);
	return vec4(col, d);
}

vec3 smooth_color(float da, float db, vec3 ca, vec3 cb, float k) {
	float h = clamp(0.5 + 0.5 * (db - da) / k, 0.0, 1.0);
	vec3 col = mix(cb, ca, h);
	return col;
}

vec4 smooth_subtract_c(float db, float da, vec3 ca, vec3 cb, float k) {
	float h = clamp(0.5 - 0.5 * (db + da) / k, 0.0, 1.0);
    float d = mix(db, -da, h) + k * h * (1.0 - h);
	vec3 col = mix(ca, cb, h);
	return vec4(col, d);
}

float subtract(float a, float b) {
	return max(a, -b);
}

float intersect(float a, float b) {
	return max(a, b);
}

vec3 repeat_domain_inf(vec3 p, vec3 c) {
	return mod(p + 0.5 * c, c) - 0.5 * c;
}

vec3 repeat_domain(vec3 p, vec3 c, vec3 l) {
	return p - c * clamp(round(p / c), -l, l);
}

float opOnion( in float sdf, in float thickness )
{
    return abs(sdf)-thickness;
}

//<functions>
//</functions>

vec4 get_scene(vec3 p, float time, vec3 world_cam_pos) {
	vec4 s = vec4(1.0, 1.0, 1.0, 99999.0);
	
	
	s = smooth_union_c(s.w, max(-1.*get_generic_shape(u_shape1002_generic_shape,(u_shape1002_transform * vec4(p, shrink)).xyz,u_shape1002_offset* shrink,u_shape1002_rounding * shrink,u_shape1002_size_primary* shrink,u_shape1002_size_secondary* shrink)- .6 * shrink * u_shape0_layer * u_shape1002_layer,max(-1.*get_generic_shape(u_shape1001_generic_shape,(u_shape1001_transform * vec4(p, shrink)).xyz,u_shape1001_offset* shrink,u_shape1001_rounding * shrink,u_shape1001_size_primary* shrink,u_shape1001_size_secondary* shrink)- .6 * shrink * u_shape0_layer * u_shape1001_layer,max(-1.*get_generic_shape(u_shape1000_generic_shape,(u_shape1000_transform * vec4(p, shrink)).xyz,u_shape1000_offset* shrink,u_shape1000_rounding * shrink,u_shape1000_size_primary* shrink,u_shape1000_size_secondary* shrink)- .6 * shrink * u_shape0_layer * u_shape1000_layer,mix(get_generic_shape(u_shape0_generic_shape,(u_shape0_transform * vec4(p, shrink)).xyz,u_shape0_offset* shrink,u_shape0_rounding * shrink,u_shape0_size_primary* shrink,u_shape0_size_secondary* shrink),opOnion(get_generic_shape(u_shape0_generic_shape,(u_shape0_transform * vec4(p, shrink)).xyz,u_shape0_offset* shrink,u_shape0_rounding * shrink,u_shape0_size_primary* shrink,u_shape0_size_secondary* shrink),.05 * shrink),u_shape0_onion_alpha)))), s.rgb, u_shape0_color.rgb, u_shape0_smoothness*shrink);
	s = smooth_union_c(s.w, max(-1.*get_generic_shape(u_shape1002_generic_shape,(u_shape1002_transform * vec4(p, shrink)).xyz,u_shape1002_offset* shrink,u_shape1002_rounding * shrink,u_shape1002_size_primary* shrink,u_shape1002_size_secondary* shrink)- .6 * shrink * u_shape1_layer * u_shape1002_layer,max(-1.*get_generic_shape(u_shape1001_generic_shape,(u_shape1001_transform * vec4(p, shrink)).xyz,u_shape1001_offset* shrink,u_shape1001_rounding * shrink,u_shape1001_size_primary* shrink,u_shape1001_size_secondary* shrink)- .6 * shrink * u_shape1_layer * u_shape1001_layer,max(-1.*get_generic_shape(u_shape1000_generic_shape,(u_shape1000_transform * vec4(p, shrink)).xyz,u_shape1000_offset* shrink,u_shape1000_rounding * shrink,u_shape1000_size_primary* shrink,u_shape1000_size_secondary* shrink)- .6 * shrink * u_shape1_layer * u_shape1000_layer,mix(get_generic_shape(u_shape1_generic_shape,(u_shape1_transform * vec4(p, shrink)).xyz,u_shape1_offset* shrink,u_shape1_rounding * shrink,u_shape1_size_primary* shrink,u_shape1_size_secondary* shrink),opOnion(get_generic_shape(u_shape1_generic_shape,(u_shape1_transform * vec4(p, shrink)).xyz,u_shape1_offset* shrink,u_shape1_rounding * shrink,u_shape1_size_primary* shrink,u_shape1_size_secondary* shrink),.05 * shrink),u_shape1_onion_alpha)))), s.rgb, u_shape1_color.rgb, u_shape1_smoothness*shrink);
	s = smooth_union_c(s.w, max(-1.*get_generic_shape(u_shape1002_generic_shape,(u_shape1002_transform * vec4(p, shrink)).xyz,u_shape1002_offset* shrink,u_shape1002_rounding * shrink,u_shape1002_size_primary* shrink,u_shape1002_size_secondary* shrink)- .6 * shrink * u_shape2_layer * u_shape1002_layer,max(-1.*get_generic_shape(u_shape1001_generic_shape,(u_shape1001_transform * vec4(p, shrink)).xyz,u_shape1001_offset* shrink,u_shape1001_rounding * shrink,u_shape1001_size_primary* shrink,u_shape1001_size_secondary* shrink)- .6 * shrink * u_shape2_layer * u_shape1001_layer,max(-1.*get_generic_shape(u_shape1000_generic_shape,(u_shape1000_transform * vec4(p, shrink)).xyz,u_shape1000_offset* shrink,u_shape1000_rounding * shrink,u_shape1000_size_primary* shrink,u_shape1000_size_secondary* shrink)- .6 * shrink * u_shape2_layer * u_shape1000_layer,mix(get_generic_shape(u_shape2_generic_shape,(u_shape2_transform * vec4(p, shrink)).xyz,u_shape2_offset* shrink,u_shape2_rounding * shrink,u_shape2_size_primary* shrink,u_shape2_size_secondary* shrink),opOnion(get_generic_shape(u_shape2_generic_shape,(u_shape2_transform * vec4(p, shrink)).xyz,u_shape2_offset* shrink,u_shape2_rounding * shrink,u_shape2_size_primary* shrink,u_shape2_size_secondary* shrink),.05 * shrink),u_shape2_onion_alpha)))), s.rgb, u_shape2_color.rgb, u_shape2_smoothness*shrink);
	s = smooth_union_c(s.w, max(-1.*get_generic_shape(u_shape1002_generic_shape,(u_shape1002_transform * vec4(p, shrink)).xyz,u_shape1002_offset* shrink,u_shape1002_rounding * shrink,u_shape1002_size_primary* shrink,u_shape1002_size_secondary* shrink)- .6 * shrink * u_shape3_layer * u_shape1002_layer,max(-1.*get_generic_shape(u_shape1001_generic_shape,(u_shape1001_transform * vec4(p, shrink)).xyz,u_shape1001_offset* shrink,u_shape1001_rounding * shrink,u_shape1001_size_primary* shrink,u_shape1001_size_secondary* shrink)- .6 * shrink * u_shape3_layer * u_shape1001_layer,max(-1.*get_generic_shape(u_shape1000_generic_shape,(u_shape1000_transform * vec4(p, shrink)).xyz,u_shape1000_offset* shrink,u_shape1000_rounding * shrink,u_shape1000_size_primary* shrink,u_shape1000_size_secondary* shrink)- .6 * shrink * u_shape3_layer * u_shape1000_layer,mix(get_generic_shape(u_shape3_generic_shape,(u_shape3_transform * vec4(p, shrink)).xyz,u_shape3_offset* shrink,u_shape3_rounding * shrink,u_shape3_size_primary* shrink,u_shape3_size_secondary* shrink),opOnion(get_generic_shape(u_shape3_generic_shape,(u_shape3_transform * vec4(p, shrink)).xyz,u_shape3_offset* shrink,u_shape3_rounding * shrink,u_shape3_size_primary* shrink,u_shape3_size_secondary* shrink),.05 * shrink),u_shape3_onion_alpha)))), s.rgb, u_shape3_color.rgb, u_shape3_smoothness*shrink);
	s = smooth_union_c(s.w, max(-1.*get_generic_shape(u_shape1002_generic_shape,(u_shape1002_transform * vec4(p, shrink)).xyz,u_shape1002_offset* shrink,u_shape1002_rounding * shrink,u_shape1002_size_primary* shrink,u_shape1002_size_secondary* shrink)- .6 * shrink * u_shape4_layer * u_shape1002_layer,max(-1.*get_generic_shape(u_shape1001_generic_shape,(u_shape1001_transform * vec4(p, shrink)).xyz,u_shape1001_offset* shrink,u_shape1001_rounding * shrink,u_shape1001_size_primary* shrink,u_shape1001_size_secondary* shrink)- .6 * shrink * u_shape4_layer * u_shape1001_layer,max(-1.*get_generic_shape(u_shape1000_generic_shape,(u_shape1000_transform * vec4(p, shrink)).xyz,u_shape1000_offset* shrink,u_shape1000_rounding * shrink,u_shape1000_size_primary* shrink,u_shape1000_size_secondary* shrink)- .6 * shrink * u_shape4_layer * u_shape1000_layer,mix(get_generic_shape(u_shape4_generic_shape,(u_shape4_transform * vec4(p, shrink)).xyz,u_shape4_offset* shrink,u_shape4_rounding * shrink,u_shape4_size_primary* shrink,u_shape4_size_secondary* shrink),opOnion(get_generic_shape(u_shape4_generic_shape,(u_shape4_transform * vec4(p, shrink)).xyz,u_shape4_offset* shrink,u_shape4_rounding * shrink,u_shape4_size_primary* shrink,u_shape4_size_secondary* shrink),.05 * shrink),u_shape4_onion_alpha)))), s.rgb, u_shape4_color.rgb, u_shape4_smoothness*shrink);
	s = smooth_union_c(s.w, max(-1.*get_generic_shape(u_shape1002_generic_shape,(u_shape1002_transform * vec4(p, shrink)).xyz,u_shape1002_offset* shrink,u_shape1002_rounding * shrink,u_shape1002_size_primary* shrink,u_shape1002_size_secondary* shrink)- .6 * shrink * u_shape5_layer * u_shape1002_layer,max(-1.*get_generic_shape(u_shape1001_generic_shape,(u_shape1001_transform * vec4(p, shrink)).xyz,u_shape1001_offset* shrink,u_shape1001_rounding * shrink,u_shape1001_size_primary* shrink,u_shape1001_size_secondary* shrink)- .6 * shrink * u_shape5_layer * u_shape1001_layer,max(-1.*get_generic_shape(u_shape1000_generic_shape,(u_shape1000_transform * vec4(p, shrink)).xyz,u_shape1000_offset* shrink,u_shape1000_rounding * shrink,u_shape1000_size_primary* shrink,u_shape1000_size_secondary* shrink)- .6 * shrink * u_shape5_layer * u_shape1000_layer,mix(get_generic_shape(u_shape5_generic_shape,(u_shape5_transform * vec4(p, shrink)).xyz,u_shape5_offset* shrink,u_shape5_rounding * shrink,u_shape5_size_primary* shrink,u_shape5_size_secondary* shrink),opOnion(get_generic_shape(u_shape5_generic_shape,(u_shape5_transform * vec4(p, shrink)).xyz,u_shape5_offset* shrink,u_shape5_rounding * shrink,u_shape5_size_primary* shrink,u_shape5_size_secondary* shrink),.05 * shrink),u_shape5_onion_alpha)))), s.rgb, u_shape5_color.rgb, u_shape5_smoothness*shrink);
	
	// add noise, for visual intrigue
	float n = surface_noise(p);
	s.w -= n;
	s.rgb -= n;
	
	return s;
}



vec3 get_normal(vec3 p, float time, vec3 world_cam_pos) {
	float d = get_scene(p, time, world_cam_pos).w;
	vec2 e = vec2(NORMAL_PRECISION*shrink, 0.0);
	vec3 n = d - vec3(
		get_scene(p - e.xyy, time, world_cam_pos).w,
		get_scene(p - e.yxy, time, world_cam_pos).w,
		get_scene(p - e.yyx, time, world_cam_pos).w);
	return normalize(n);
}

vec4 raymarch(vec3 ray_origin, vec3 ray_dir, out vec3 out_normal, float time, vec3 world_cam_pos) {
	// Sphere tracing
	float d = 0.0;
	vec3 rgb;
	for (int i = 0; i < MAX_STEPS; ++i) {
		vec3 p = ray_origin + ray_dir * d;
		vec4 scene_info = get_scene(p, time, world_cam_pos);
		rgb = scene_info.rgb;
		float ds = scene_info.w;
		d += ds;
		if (d > MAX_DISTANCE * shrink || ds < SURFACE_DISTANCE) {
			break;
		}
	}

	vec3 hit_pos = ray_origin + ray_dir * d;
	out_normal = get_normal(hit_pos, time, world_cam_pos);
	

	return vec4(rgb, d);
}

void fragment() {
	// Could certainly be optimized I think
	vec3 ndc = vec3(SCREEN_UV, 0.0) * 2.0 - 1.0;
	vec4 view_coords = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view_coords.xyz /= view_coords.w;
	vec3 world_cam_pos = (INV_VIEW_MATRIX * vec4(0.0, 0.0, 0.0, 1.0)).xyz;
	vec4 world_coords = INV_VIEW_MATRIX * vec4(view_coords.xyz, 1.0);
	
	vec3 ray_origin = world_coords.xyz;
	vec3 ray_dir = normalize(world_coords.xyz - world_cam_pos);
	
	//float time = 0.0;
	float time = float(TIME);
	
	vec3 normal;
	vec4 rm = raymarch(ray_origin, ray_dir, normal, time, world_cam_pos);
	float d = rm.w;
	
	if (d > MAX_DISTANCE * shrink) {
		discard;
	}

	
	vec4 sdf_ndc = PROJECTION_MATRIX * VIEW_MATRIX * vec4(ray_origin + ray_dir * d, 1.0);
	DEPTH = (sdf_ndc.z / sdf_ndc.w) * 0.5 + 0.5;
	//DEPTH = clamp(d*.02,0.,1.);
	
	
	NORMAL = (VIEW_MATRIX * vec4(normal, 0.0)).xyz;
	
	//ALBEDO = ray_dir * 0.1;
	//ALBEDO = rm.rgb;
	ALBEDO = mix(rm.rgb, fog_color, clamp(0.,1.,DEPTH * 100. - 99.));
	//ALBEDO = vec3(depth);
	//ALBEDO = normal;
	/*if(d > 0.0) {
		ALBEDO = vec3(0.0, 1.0, 0.0);
	}*/
}

"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2jmub"]
render_priority = 0
shader = SubResource("Shader_je37t")
shader_parameter/u_shape3_rounding = 0.2
shader_parameter/u_shape3_onion_thickness = 0.0
shader_parameter/u_shape3_onion_alpha = 1.0
shader_parameter/u_shape3_offset = Vector3(0, 0, 0)
shader_parameter/u_shape3_layer = 1.0
shader_parameter/u_shape3_generic_shape = 1
shader_parameter/u_shape3_color = Color(0.282353, 0.431373, 0.231373, 1)
shader_parameter/u_shape2_transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 19.0866, -0.00168875, 82.6974)
shader_parameter/u_shape2_smoothness = 0.2
shader_parameter/u_shape2_size_secondary = 530.842
shader_parameter/u_shape2_size_primary = 80.0
shader_parameter/u_shape2_rounding = 0.2
shader_parameter/u_shape2_onion_thickness = 0.0
shader_parameter/u_shape2_onion_alpha = 0.0
shader_parameter/u_shape2_offset = Vector3(0, 0, 0)
shader_parameter/u_shape2_layer = 1.0
shader_parameter/u_shape2_generic_shape = 3
shader_parameter/u_shape2_color = Color(0.423529, 0.305882, 0.184314, 1)
shader_parameter/u_shape1_transform = Transform3D(0.982564, 0.205146, 0, -0.205133, 0.982579, 0, 0, 0, 1.00004, 3.19199, -0.67255, -0.464716)
shader_parameter/u_shape1_smoothness = 0.2
shader_parameter/u_shape1_size_secondary = 0.37
shader_parameter/u_shape1_size_primary = 1.05
shader_parameter/u_shape1_rounding = -0.16
shader_parameter/u_shape1_onion_thickness = 0.0
shader_parameter/u_shape1_onion_alpha = 0.0
shader_parameter/u_shape5_transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.72922, -2.29855, 9.32009)
shader_parameter/u_shape5_smoothness = 0.2
shader_parameter/u_shape5_size_secondary = 2.66551
shader_parameter/u_shape5_size_primary = 3.032
shader_parameter/u_shape5_rounding = 0.2
shader_parameter/u_shape5_onion_thickness = 0.0
shader_parameter/u_shape5_onion_alpha = 0.0
shader_parameter/u_shape5_offset = Vector3(0, 0, 0)
shader_parameter/u_shape5_layer = 1.0
shader_parameter/u_shape5_generic_shape = 0
shader_parameter/u_shape5_color = Color(0.760784, 0.694118, 0.431373, 1)
shader_parameter/u_shape4_transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.48519, 2.994, 11.7976)
shader_parameter/u_shape4_smoothness = 0.2
shader_parameter/u_shape4_size_secondary = 2.657
shader_parameter/u_shape4_size_primary = 7.57
shader_parameter/u_shape4_rounding = 0.2
shader_parameter/u_shape4_onion_thickness = 0.0
shader_parameter/u_shape4_onion_alpha = 1.0
shader_parameter/u_shape4_offset = Vector3(0, 0, 0)
shader_parameter/u_shape4_layer = 1.0
shader_parameter/u_shape4_generic_shape = 0
shader_parameter/u_shape4_color = Color(0.662745, 0.192157, 0.6, 1)
shader_parameter/u_shape3_transform = Transform3D(-0.0581263, 0.0534083, -0.996737, 0.420992, 0.907069, 0.0240422, 0.904771, -0.417973, -0.0751899, -5.92234, -1.03747, -9.45977)
shader_parameter/u_shape3_smoothness = 0.2
shader_parameter/u_shape3_size_secondary = 6.26073
shader_parameter/u_shape3_size_primary = 1.724
shader_parameter/u_shape1000_transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -4.72069e-05, -0.00599527, 0.00168514)
shader_parameter/u_shape1000_smoothness = 0.2
shader_parameter/u_shape1000_size_secondary = 3.0
shader_parameter/u_shape1000_size_primary = 0.0
shader_parameter/u_shape1000_rounding = 0.0
shader_parameter/u_shape1000_onion_thickness = 0.0
shader_parameter/u_shape1000_onion_alpha = 0.0
shader_parameter/u_shape1000_offset = Vector3(0, 0, 0)
shader_parameter/u_shape1000_layer = 1.0
shader_parameter/u_shape1000_generic_shape = 1
shader_parameter/u_shape1000_color = Color(1, 1, 1, 1)
shader_parameter/u_shape0_transform = Transform3D(0.5, -0.866026, 0, 0.866026, 0.5, 0, 0, 0, 1, 0.785919, 1.34926, 0.117549)
shader_parameter/u_shape0_smoothness = 0.2
shader_parameter/u_shape0_size_secondary = 0.516588
shader_parameter/u_shape0_size_primary = 3.6582
shader_parameter/u_shape0_rounding = 0.2
shader_parameter/u_shape0_onion_thickness = 0.0
shader_parameter/u_shape0_onion_alpha = 0.0
shader_parameter/u_shape0_offset = Vector3(0.5, 0.5, 0.8)
shader_parameter/u_shape0_layer = 1.0
shader_parameter/u_shape0_generic_shape = 2
shader_parameter/u_shape0_color = Color(0.341176, 0.345098, 0.647059, 1)
shader_parameter/shrink = 1.0
shader_parameter/fog_color = null
shader_parameter/u_shape1_offset = Vector3(0, 3.814, 0)
shader_parameter/u_shape1_layer = 1.0
shader_parameter/u_shape1_generic_shape = 4
shader_parameter/u_shape1_color = Color(1, 0.32549, 0.113725, 1)
shader_parameter/u_shape1002_transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -4.72069e-05, -0.00599527, 0.00168514)
shader_parameter/u_shape1002_smoothness = 0.2
shader_parameter/u_shape1002_size_secondary = 0.0
shader_parameter/u_shape1002_size_primary = 0.0
shader_parameter/u_shape1002_rounding = 0.0
shader_parameter/u_shape1002_onion_thickness = 0.0
shader_parameter/u_shape1002_onion_alpha = 0.0
shader_parameter/u_shape1002_offset = Vector3(0, 0, 0)
shader_parameter/u_shape1002_layer = 1.0
shader_parameter/u_shape1002_generic_shape = 1
shader_parameter/u_shape1002_color = Color(1, 1, 1, 1)
shader_parameter/u_shape1001_transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -4.72069e-05, -0.00599527, 0.00168514)
shader_parameter/u_shape1001_smoothness = 0.2
shader_parameter/u_shape1001_size_secondary = 0.0
shader_parameter/u_shape1001_size_primary = 0.0
shader_parameter/u_shape1001_rounding = 0.0
shader_parameter/u_shape1001_onion_thickness = 0.0
shader_parameter/u_shape1001_onion_alpha = 0.0
shader_parameter/u_shape1001_offset = Vector3(0, 0, 0)
shader_parameter/u_shape1001_layer = 1.0
shader_parameter/u_shape1001_generic_shape = 1
shader_parameter/u_shape1001_color = Color(1, 1, 1, 1)

[sub_resource type="PlaneMesh" id="PlaneMesh_3kxfy"]
flip_faces = true
orientation = 2

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fkooi"]
shader = ExtResource("7_liiw3")
shader_parameter/colorA = Color(0.305882, 0.180392, 0.14902, 1)
shader_parameter/colorB = Color(0.121569, 0.0470588, 0.0352941, 1)
shader_parameter/patch_size = 0.47
shader_parameter/patch_start = 0.408
shader_parameter/repetition = 3.5
shader_parameter/speed = 0.04

[sub_resource type="Sky" id="Sky_us488"]
sky_material = SubResource("ShaderMaterial_fkooi")
process_mode = 3

[sub_resource type="Environment" id="Environment_gslwi"]
background_mode = 2
background_color = Color(0.129412, 0.490196, 0.741176, 1)
sky = SubResource("Sky_us488")
ambient_light_source = 3
ambient_light_color = Color(1, 1, 1, 1)
ambient_light_sky_contribution = 0.88
ambient_light_energy = 2.0
reflected_light_source = 1
fog_light_color = Color(0.160784, 0.14902, 0.180392, 1)
fog_density = 0.0419
fog_sky_affect = 0.968
volumetric_fog_albedo = Color(0.290196, 0.290196, 0.290196, 1)
volumetric_fog_length = 40.0
volumetric_fog_sky_affect = 0.7

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_sdjvp"]
exposure_multiplier = 1.5
dof_blur_far_enabled = true
dof_blur_far_distance = 6.67
dof_blur_far_transition = 188.51
dof_blur_near_distance = 0.18
dof_blur_near_transition = 0.1
dof_blur_amount = 0.26

[node name="Node3d" type="Node3D"]

[node name="Player" parent="." instance=ExtResource("1_an2so")]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.31504, 3.50588)

[node name="SDFContainer" type="MeshInstance3D" parent="."]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 4.72069e-05, 0.00599527, -0.00168514)
material_override = SubResource("ShaderMaterial_2jmub")
extra_cull_margin = 16384.0
mesh = SubResource("PlaneMesh_3kxfy")
script = ExtResource("2_vw6ij")

[node name="Cutaway1" type="Node3D" parent="SDFContainer"]
script = ExtResource("7_vvng6")
size_primary = 0.0
size_secondary = 3.0
rounding = 0.0
onion_thickness = 0.0
g_shape = 1
operation = 3
layer = 1.0

[node name="Cutaway2" type="Node3D" parent="SDFContainer"]
script = ExtResource("7_vvng6")
size_primary = 0.0
size_secondary = 0.0
rounding = 0.0
onion_thickness = 0.0
g_shape = 1
operation = 3
layer = 1.0

[node name="Cutaway3" type="Node3D" parent="SDFContainer"]
script = ExtResource("7_vvng6")
size_primary = 0.0
size_secondary = 0.0
rounding = 0.0
onion_thickness = 0.0
g_shape = 1
operation = 3
layer = 1.0

[node name="Torus" type="Node3D" parent="SDFContainer"]
transform = Transform3D(0.5, 0.866025, 0, -0.866025, 0.5, 0, 0, 0, 1, -1.5615, 0, -0.115863)
script = ExtResource("7_vvng6")
size_primary = 3.6582
size_secondary = 0.516588
rounding = 0.2
offset = Vector3(0.5, 0.5, 0.8)
onion_thickness = 0.0
g_shape = 2
osc_z = true
MAX_OSC = 0.3
operation = 0
color = Color(0.341176, 0.345098, 0.647059, 1)
layer = 1.0

[node name="red-cone" type="Node3D" parent="SDFContainer"]
transform = Transform3D(0.975236, -0.203613, 0, 0.2036, 0.975221, 0, 0, 0, 0.999957, -3.24993, 0, 0.466381)
script = ExtResource("7_vvng6")
size_primary = 1.05
size_secondary = 0.37
rounding = -0.16
offset = Vector3(0, 3.814, 0)
onion_thickness = 0.0
g_shape = 4
spin_speed = 0.58
spin_axis = Vector3(0, 0, 1)
operation = 0
color = Color(1, 0.32549, 0.113725, 1)
layer = 1.0

[node name="SDFGeneric" type="Node3D" parent="SDFContainer"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -19.0866, -82.7034, 0)
script = ExtResource("7_vvng6")
size_primary = 80.0
size_secondary = 530.842
rounding = 0.2
onion_thickness = 0.0
g_shape = 3
operation = 0
color = Color(0.423529, 0.305882, 0.184314, 1)
layer = 1.0

[node name="greenbox" type="Node3D" parent="SDFContainer"]
transform = Transform3D(-0.0581748, 0.420779, 0.905725, 0.0534267, 0.906522, -0.418374, -0.997018, 0.0240359, -0.0752366, 8.65992, -2.70682, -6.58978)
script = ExtResource("7_vvng6")
size_primary = 1.724
size_secondary = 6.26073
rounding = 0.2
onion_alpha = 1.0
onion_thickness = 0.0
g_shape = 1
MAX_OSC = 0.1
spin_speed = 0.46
spin_axis = Vector3(0, 1, 0)
operation = 0
color = Color(0.282353, 0.431373, 0.231373, 1)
layer = 1.0

[node name="pinkglobe" type="Node3D" parent="SDFContainer"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.48514, -3, -11.7959)
script = ExtResource("7_vvng6")
size_primary = 7.57
size_secondary = 2.657
rounding = 0.2
onion_alpha = 1.0
onion_thickness = 0.0
operation = 0
color = Color(0.662745, 0.192157, 0.6, 1)
layer = 1.0

[node name="yellowball" type="Node3D" parent="SDFContainer"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1.72927, 2.29255, -9.3184)
script = ExtResource("7_vvng6")
size_primary = 3.032
size_secondary = 2.66551
rounding = 0.2
onion_thickness = 0.0
osc_z = true
MAX_OSC = 1.1
operation = 0
color = Color(0.760784, 0.694118, 0.431373, 1)
layer = 1.0

[node name="DirectionalLight3d" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.111727, -0.0785847, 0.990627, 0.0413513, 0.995637, 0.0836459, -0.992878, 0.0503092, -0.10799, 0, 3.2076, 7.80617)

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_gslwi")
camera_attributes = SubResource("CameraAttributesPractical_sdjvp")

[node name="Hierarch" parent="." instance=ExtResource("8_eob7v")]
unique_name_in_owner = true

[node name="HUD" parent="." instance=ExtResource("9_7c4ph")]
